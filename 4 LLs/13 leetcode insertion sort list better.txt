//https://leetcode.com/problems/insertion-sort-list/discuss/46420/An-easy-and-clear-way-to-sort-(-O(1)-space-)

/*
1. For every current node
2. Keep an iterator from start
- 2.1 prev and prev.next
- 2.2 keep moving until current node is greater than prev next
- 2.3 once it breaks we found the insertion position
- 2.4 insert curr between prev and prev.next
*/
class Solution {
        public ListNode insertionSortList(ListNode head) {
            if( head == null ){
                return head;
            }

            ListNode helper = new ListNode(0); //new starter of the sorted list
            ListNode cur = head; //the node will be inserted
            ListNode pre = helper; //insert node between pre and pre.next
            ListNode next = null; //the next node will be inserted
            //not the end of input list
            
            //1 For every current node
            while( cur != null ){
                next = cur.next;
                //find the right place to insert
                //2.1, 2.2
                while( pre.next != null && pre.next.val < cur.val ){
                    pre = pre.next;
                }
                
                //2.3,2.4
                //insert between pre and pre.next
                cur.next = pre.next;
                pre.next = cur;
                pre = helper;
                
                cur = next;
            }

            return helper.next;
        }
}