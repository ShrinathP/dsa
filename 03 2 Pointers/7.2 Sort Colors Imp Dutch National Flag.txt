//while indexrunner reaches end, 
	if 0 swap with low, increase lo and index
	if 2 swap with hi, decrease only hi
	if 1 increase only index
//Dutch National Flag Algorithm

class Solution {
    public void sortColors(int[] nums) {
      //Dutch National Flag Algorithm
        //3 pointers 
	//index, low pointer and hi pointer
        //if 0 put into first move 1st pointer and index
        //if 2 put into back and move 2nd pointer back and dont move index
	//else keep moving the index
        ////NickWhite SortColors
        
        if(nums.length ==0 || nums == null)
            return;
        
        int start_pointer = 0;
        int end_pointer = nums.length-1;
        int index = 0;

//you dont need below condition
// && start_pointer < end_pointer
        while(index <= end_pointer){
            if(nums[index] == 0){
                //swap index with nums
                nums[index] = nums[start_pointer];
                nums[start_pointer] = 0; 
                //not using temp coz we know star_index is going to be 0
                index++;
                start_pointer++;
            } else if(nums[index] == 2){
                nums[index] = nums[end_pointer];
                nums[end_pointer] = 2;
                end_pointer--;
                //Note: Do not move index lower here
                //[0,2*,0,0,2,2,1,1*]
                //because assume we have 1 at end
                //for index at 2 we would be swapping 2 with 1
                //then after swap
                //[0,1*,0,0,2,2,1,2*]
                //we need to check this swapped 1 if its 0 or not 
                //(if 1 this should be moved ahead)
                //so we are not moving index here
            } else{
              index++;  
            }
        }
    }
}