//https://hellohell.gitbooks.io/-shuati/content/partition_array_by_odd_and_even.html

//2 pointer optimal - no space
////Sort array by Parity - https://leetcode.com/problems/sort-array-by-parity/

public class Solution {
    /**
     * @param nums: an array of integers
     * @return: nothing
     */
    public void partitionArray(int[] nums) {
        int start=0;
        int end = nums.length-1;

        while(start<=end){
            if(nums[start]%2!=0){
                start++;
            }
            else{
//push even ones at the end
                swap(nums, start, end);
                end--;
            }
        }
    }

    public void swap(int[] nums, int left, int right){
        int tmp = nums[left];
        nums[left] = nums[right];
        nums[right] = tmp;
    }
}