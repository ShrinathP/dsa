//Algorthms made easy solution
//chatgpt soln
/*
Cleaner Greedy (Always O(n)):


*/

  //Algorithms made easy
    /*
    1. Create a variable end to track the end from the current index
    2. Create a farthest variable which will track the farthest 
    jump that can be done considering numbers from i to end
    eg [2, 3, 1, 1, 4, 8, 1, 2, 1, 1, 3]
        i     end
    3. farthest will store the maxi jump which can be done till end is reached
    4. Iterate over the array and
        keep updating the farthest value
    5. when i reaches end, 
        update jump number, 
        update end to farthest
        
    */

class Solution {
    
  
    public int jump(int[] nums) {
        int begin = 0, end = 0, farthest = 0;
        int jump = 0;
        
        for(int i=0; i< nums.length -1 ; i++) {
            farthest = Math.max(farthest, i+nums[i]);
            
            if(i == end) {
                jump++;
                end = farthest;
            }
        }
        return jump;
    }
}