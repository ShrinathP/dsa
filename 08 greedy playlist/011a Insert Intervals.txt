/*
Leetcode Problem 57
chatgpt soln
ðŸ§© Problem Summary:
Given a set of non-overlapping intervals and a new interval, insert the new interval into the list and merge if necessary.
The list must be sorted after the insertion.

âœ… Greedy Strategy:
1. Find overlapping intervals with the new interval.
2. Merge all intervals that overlap with the new interval.
3. If no overlap, simply insert the new interval at the correct position.

Greedy Choice Explanation:
The greedy approach here is to merge as many overlapping intervals as possible with the new interval before adding it to the result.
*/

// Step 1: Add all intervals ending before newInterval starts
// Step 2: Merge all overlapping intervals
// Step 3: Add remaining intervals after newInterval

import java.util.*;

public class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> result = new ArrayList<>();
        
        int i = 0, n = intervals.length;

        // Step 1: Add all intervals ending before newInterval starts
        while (i < n && intervals[i][1] < newInterval[0]) {
            result.add(intervals[i]);
            i++;
        }

        // Step 2: Merge all overlapping intervals - where start is less then the new interval end
        while (i < n && intervals[i][0] <= newInterval[1]) {
            newInterval[0] = Math.min(newInterval[0], intervals[i][0]);
            newInterval[1] = Math.max(newInterval[1], intervals[i][1]);
            i++;
        }
        result.add(newInterval);

        // Step 3: Add remaining intervals after newInterval - add rest intervals
        while (i < n) {
            result.add(intervals[i]);
            i++;
        }

        return result.toArray(new int[result.size()][]);
    }
}


