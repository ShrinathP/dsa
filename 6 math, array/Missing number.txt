//Kevin naughton
//1st way extra memory
class Solution {
    public int missingNumber(int[] nums) {
        HashSet<Integer> set = new HashSet();
        for(int i: nums){
            set.add(i);
        }
        
        for(int i=0; i<= nums.length; i++){
            if(!set.contains(i)){
                return i;
            }
        }
        
        return -1;
    }
}


//No usage of extra memory
//Kevin naughton
//Other way not using extra space
//Natural sum of all number till n is
/*
n(n-1)/2
*/
//Kevin naughton
//Other way not using extra space
//Natural sum of all number till n is
/*
n(n-1)/2
*/
class Solution {
    public int missingNumber(int[] nums) {
        int sum=0;
        for(int i: nums){
            sum += i;
        }
        
        int n = nums.length+1;
        
        return (n * (n-1) / 2) - sum;
    }
}