DFS solution
Sink the current and all the adjacent battleships

//Kevin naughton
//Sink current and the neighboring battleships solution
//increment the number
class Solution {
    public int countBattleships(char[][] board) {
        int numBattleShips = 0;
        for(int i=0; i< board.length; i++){
            for(int j = 0; j<board[i].length; j++){
                if(board[i][j] == 'X'){
                    numBattleShips++;
                    sink(board, i, j);
                }
            }
        }
        return numBattleShips;
        
    }
    
    public void sink(char[][] board, int i, int j){
        if(i<0||i>= board.length||j<0 || j>= board[0].length || board[i][j] != 'X'){
            return;
        }
        
        board[i][j] = '.';
        
        //sink the neighbors
        sink(board, i+1, j);
        sink(board, i-1, j);
        sink(board, i, j+1);
        sink(board, i, j-1);
    }
}