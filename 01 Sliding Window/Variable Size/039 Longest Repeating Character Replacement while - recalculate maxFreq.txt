//chatgpt
//Recalculate maxFrequency at every while
//striver explanation
//leetcode - 424. Longest Repeating Character Replacement
//This can be improvised - as we are seeking for maxer maxFreq - check striver's explanation - below link
// https://youtu.be/_eNhaDCr6P0?si=7D2LhCbOEoYkUjQH&t=1147

class Solution {
    public int characterReplacement(String s, int k) {
        int[] count = new int[26];  // Frequency of characters A-Z
        int left = 0, right = 0;
        int maxFreq = 0;            // Max frequency of any character in the window
        int maxLen = 0;

        while (right < s.length()) {
            int idx = s.charAt(right) - 'A';
            count[idx]++;
            maxFreq = Math.max(maxFreq, count[idx]);

            // If replacements needed > k, shrink window
            while ((right - left + 1) - maxFreq > k) {
                count[s.charAt(left) - 'A']--;
                left++;

                // Recalculate maxFreq by scanning the count array
                maxFreq = 0;
                for (int c = 0; c < 26; c++) {
                    maxFreq = Math.max(maxFreq, count[c]);
                }
            }

            maxLen = Math.max(maxLen, right - left + 1);
            right++;
        }

        return maxLen;
    }
}
