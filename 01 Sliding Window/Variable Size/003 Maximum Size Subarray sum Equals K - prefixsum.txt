//cue - prefixsum - map of sum and indices
//https://www.programcreek.com/2014/10/leetcode-maximum-size-subarray-sum-equals-k-java/
//325 locked
//https://github.com/just4once/leetcode/blob/master/leetcode/hash-table/325-maximum-size-subarray-sum-equals-k.md

//ProgramCreek Solution
//Explanation - Algorerhythms - 325. Maximum Size Subarray Sum Equals k - https://www.youtube.com/watch?v=xa_60srQAKo
/*
1.
Run a for loop
keep adding sum, and keep storing its index in a Map
[1,3,4,2,1,3]

2.
So Map will contain sum, index pairs
{1, 0}
{4, 2}

3.
at any point check if there is already a (sum - k) key
if yes, currentindex - map.get(sum - k) will be the length of subarray
*/


public int maxSubArrayLen(int[] nums, int k) {
    HashMap<Integer, Integer> map = new HashMap<>();
    map.put(0, -1);
    int result = 0;
    int sum = 0;
 
    for(int i=0; i<nums.length; i++){
        sum += nums[i];
        if(map.containsKey(sum - k)){
            result = Math.max(result, i - map.get(sum - k));
        }
        map.putIfAbsent(sum, i);
    }
 
    return result;
}
