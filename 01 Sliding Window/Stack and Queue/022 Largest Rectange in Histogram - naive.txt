/*
Striver explaantion - google ai gemini solution

Problem Breakdown
Input: An array of non-negative integers (heights) representing the heights of bars in a histogram. 
Bar Width: Each bar has a width of 1. 
Output: The area of the largest rectangle that can be formed within the histogram. 
Example
For the input heights = [2, 1, 5, 6, 2, 3], the largest rectangle has an area of 10. This can be formed by considering the two bars with heights 5 and 6. The minimum height is 5, and the width is 2, resulting in an area of 5 * 2 = 10. 
*/

public class LargestRectangleInHistogramNaive {

    public int largestRectangleArea(int[] heights) {
        int n = heights.length;
        int maxArea = 0;

        // Iterate through all possible starting bars (left boundary)
        for (int i = 0; i < n; i++) {
            int minHeight = heights[i]; // Initialize minHeight with the current bar's height

            // Iterate through all possible ending bars (right boundary)
            for (int j = i; j < n; j++) {
                // Update minHeight for the current range [i, j]
                minHeight = Math.min(minHeight, heights[j]);

                // Calculate the width of the current rectangle
                int width = j - i + 1;

                // Calculate the area and update maxArea
                maxArea = Math.max(maxArea, minHeight * width);
            }
        }
        return maxArea;
    }

    public static void main(String[] args) {
        LargestRectangleInHistogramNaive solution = new LargestRectangleInHistogramNaive();
        int[] heights1 = {2, 1, 5, 6, 2, 3};
        System.out.println("Largest rectangle area for [2,1,5,6,2,3]: " + solution.largestRectangleArea(heights1)); // Expected: 10

        int[] heights2 = {2, 4};
        System.out.println("Largest rectangle area for [2,4]: " + solution.largestRectangleArea(heights2)); // Expected: 4
    }
}
