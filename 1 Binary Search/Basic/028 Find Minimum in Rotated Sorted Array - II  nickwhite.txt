//154 leetcode
//Duplicates Allowed
//Find Minimum in Rotates Sorted Array with duplicates

class Solution {
    
    //Nick white
    //Same as the 1st solution, just that you need to handle cases like
    //[3,1,3] when nums[i] == nums[j] and i != j ,move one of i or j
    
    public int findMin(int[] nums) {
        
        if(nums.length == 0) return -1;
        if(nums.length == 1) return nums[0];
        
        int left = 0;
        int right = nums.length -1;
        
        while(left <= right){
            
            while(nums[left] == nums[right] && left != right){
                left++;
            }
            
            //if nums[left] == nums[right] then no rotation
            if(nums[left]<=nums[right]){
                return nums[left];
            }
            
            int mid = left + (right - left)/2;
            
            //if you find discrepency at midpoint only return the minimum
            if(mid > 0 && nums[mid] < nums[mid-1]) {
                return nums[mid];
            }
            
            //left is sorted, search right
            if(nums[left] <= nums[mid]){
                left = mid + 1;
            } else {
            //right is sorted, search left
                right = mid;
            }
            
        }
        return nums[left];
    }
}