//no dups, cue- sort and 2 pointer, compute absolute at each step
/*
Time Complexity O (N) square
*/

class Solution {
    public int threeSumClosest(int[] nums, int target) {
        //temporary closest result
        int result = nums[0] + nums[1] + nums[nums.length-1];
        Arrays.sort(nums);
        
        for(int i=0; i < nums.length-2; i++){
            //getting the first number nums[i]
            int a_pointer = i+1;
            int b_pointer = nums.length-1;
            
            //2 pointer to get the other 2 pointers and then calculating the sum
            while(a_pointer < b_pointer){
                int current_sum = nums[i] + nums[a_pointer] + nums[b_pointer];
                if(current_sum > target){
                    b_pointer -= 1;
                } else{
                    a_pointer +=1 ;
                }
                
                if(Math.abs(current_sum-target) < Math.abs(result-target)){
                    result = current_sum;
                }
            }
        }
        return result;
        
    }
}