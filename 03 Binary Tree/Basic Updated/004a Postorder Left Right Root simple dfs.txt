//Take U forward
//Left right Node

/*
Steps - Node is last
        1. First recur on left subtree
        2. Then recur on right subtree
        3. Now deal with the node

*/


class Solution {
    private void dfs(TreeNode node, List<Integer> postorder) {
        if(node == null) return; 
        
        dfs(node.left, postorder);
        dfs(node.right, postorder); 
        postorder.add(node.val); 
    }
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> postorder = new ArrayList<Integer>(); 
        dfs(root, postorder);
        return postorder; 
    }
}