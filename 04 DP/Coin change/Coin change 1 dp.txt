//Kevin naughton
//DP iterative
class Solution {
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount+1];
        
        Arrays.fill(dp, amount+1);
        dp[0]=0; //as we need 0 coins to make amount to 0
        
        for(int i =0; i<= amount; i++){
            for(int j=0; j< coins.length; j++){
                if(coins[j] <= i){
                    dp[i] = Math.min(dp[i], 1 + dp[i - coins[j]]);
                    //Minimum of amout+1 and coin + dp of smaller amount
                }
            }
        }
        
        //if dp[amount] still remains > amount i.e. amount +1 return -1
        return dp[amount] > amount ? -1: dp[amount];
        
        
    }
}