//cue - traverse from back- set j = nums[j] + nums[j-1], add 1
//Pascals2
//In place modification of the row, to generate next row
//1. add 1, start with first row
//2. for every rowIndex, we would need rowIndex-1 operations to geenrate the row
//To generate the next row
//3. perform each operation from behind/ last of the prev row
//4. set num j = num j + num(j-1) . setting/replacing value at index
//5. add 1

//Code bix
class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> res = new ArrayList<>();
        if(rowIndex < 0) return res;
        res.add(1);

//2. for every rowIndex, we would need rowIndex-1 operations

        for(int i=0; i< rowIndex; i++){
//generate next row
//nums j of current row = nums j + nums j-1 (of prev row)
            for(int j=res.size()-1; j>0; j--){
                res.set(j, res.get(j) + res.get(j-1));
            }
//add 1 at last of every new row geenrated
            res.add(1);
        }
        return res;
        
    }
}