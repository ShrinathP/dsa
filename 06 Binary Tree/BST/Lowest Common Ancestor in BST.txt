
/*
Striver explanation
The point where the current node is between the p.val and q.val, that is your LCA
*/

class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int x) { val = x; }
}

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) return null;

        int curr = root.val;

        if (curr < p.val && curr < q.val)
            return lowestCommonAncestor(root.right, p, q);

        if (curr > p.val && curr > q.val)
            return lowestCommonAncestor(root.left, p, q);

        return root; // LCA found
    }
}

