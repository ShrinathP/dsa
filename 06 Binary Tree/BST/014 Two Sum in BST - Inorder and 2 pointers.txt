
/*
Striver explanation

ðŸ§  Logic:
Do inorder traversal â†’ get sorted list.
Apply two-pointer technique to find sum == K.

Time: O(N)
Space: O(N) for storing nodes
*/


class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int x) { val = x; }
}



class Solution {
    public boolean findTarget(TreeNode root, int k) {
        List<Integer> list = new ArrayList<>();
        inorder(root, list);

        int left = 0, right = list.size() - 1;
        while (left < right) {
            int sum = list.get(left) + list.get(right);
            if (sum == k) return true;
            else if (sum < k) left++;
            else right--;
        }
        return false;
    }

    private void inorder(TreeNode node, List<Integer> list) {
        if (node == null) return;
        inorder(node.left, list);
        list.add(node.val);
        inorder(node.right, list);
    }
}








