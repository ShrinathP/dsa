/*
Bottom up approach
Algorithms made easy
Naresh gupta explanation
O(N) solution

Basic Height Calculation Problem
Check for every subtrees if its balanced
i.e. difference between left and right subtrees is <= 1
*/
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null) return true;
        return height(root)!= -1;
    }
    
    public int height(TreeNode node){
        if(node == null) return 0;
        int left = height(node.left);
        int right = height(node.right);
        int bf = Math.abs(left - right);
        
        //If left subtree is unbalanced
        //If right subtree is unbalanced
        //If current nodes left - right height is greater than 1
        //return -1 in any case
        if(bf > 1|| left == -1 || right == -1) return -1;
        
        //or return height which is max of left, right + current node
        return 1 + Math.max(left, right);
    }
}