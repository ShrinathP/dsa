//Sliding window youtube playist

class Solution {
    public String minWindow(String s, String t) {
    
        //https://www.youtube.com/watch?v=U1q16AFcjKs
        
        //s is the string in which we need to find minimum window
        if(t.length() > s.length()) return "";
        
        //Step 1: mp is the array that stores the charactersof t and its count
        Map<Character, Integer> mp = new HashMap<>();
        
        for(char c: t.toCharArray()){
            mp.put(c, mp.getOrDefault(c,0) + 1);
        }
        
        int counter = mp.size();
        
        //2 pointers
        int begin =0;
        int end =0;
        int head =0;
        int len = Integer.MAX_VALUE;
        
        while(end < s.length()){
            char c = s.charAt(end);
            if(mp.containsKey(c)){        //if found keep reducing the map value
               mp.put(c, mp.get(c) - 1);
            
            if(mp.get(c) == 0)        //if the value is 0, reduce the counter(unique value)
                counter--;
            }
            end++; //move the 2nd pointer
            
            //Step 2: counter==0 found the 1st min substring
            //move the begin++ until one of the counter increases to 1
            //now we get the first substring length
            while(counter == 0){
                char frontChar = s.charAt(begin);

		//increase the counter of frontChar
		//as we will be moving begin ahead
                if(mp.containsKey(frontChar)){
                    mp.put(frontChar, mp.get(frontChar) + 1);
                    if(mp.get(frontChar) > 0){
                        counter++;
                    }
                }
                
                if(end-begin < len){
                    len = end -begin;
                    head = begin;
                }
                begin++;
            }
        }
        
        if(len == Integer.MAX_VALUE) return "";
        return s.substring(head, head+len);
    }
}