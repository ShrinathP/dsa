//cue- freqarr->split whenenver you find a letter with freq less than k

// Divide and conquer - method

class Solution {
	    //Check coding decoded youtube solution as well

    //Algorithms made easy    //https://github.com/Sunchit/Coding-Decoded/blob/master/November2020/SubstringWithAtLeastKRepeatingCharacters.java
    public int longestSubstring(String s, int k) {
        return helper(s.toCharArray(), 0, s.length(), k);
    }
    
    int helper(char[] ch, int start, int end, int k){
        if(end-start < k) return 0;
        
        //Create a frequency array to fill all characters
        int[] count = new int[26];
        for(int i= start; i<end; i++){
            count[ch[i]-'a']++;
        }
        
        //again iterating and finding the breakpoint
        //a character where the freq is less than k
        for(int i=start; i< end; i++){
            if(count[ch[i] - 'a'] < k){
                //start index of the next substring
                int j=i+1;
                
                //special case
                //increment j if the next characters are of 
                //less than k frequency only
                //as we would ignore those characters
                while(j<end && count[ch[j] - 'a'] < k){
                    j++;
                }
                
                //find maxes of left and right
                            //1 doubt
                            //Left part we have already calculated?
                return Math.max(helper(ch, start, i, k), helper(ch, j, end, k));
                
            }
        }
        return end - start;
    }
}
