//https://massivealgorithms.blogspot.com/2014/07/dynamic-programming-set-12-longest.html
   
 public int longestPalindromeSubseq(String s) {
        int len=s.length();
//fill diagonals
        int[][] dp=new int[len][len];
        for (int i=0;i<len;i++)
            dp[i][i]=1;

//for every length of string from 1 to n where d represents current length
        for (int d=1;d<len;d++) {

//start index i, end index j
//Keep coming closer
            for (int i=0;i<len-d;i++) {
                int j=i+d;
                if (s.charAt(i)==s.charAt(j)) dp[i][j]=2+dp[i+1][j-1];
                else { 
			dp[i][j]=Math.max(dp[i][j-1], dp[i+1][j]);
		}
            }
        }
        return dp[0][len-1];
    }