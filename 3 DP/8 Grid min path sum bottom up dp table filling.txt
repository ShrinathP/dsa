//Bottom up DP, Table filling
//https://leetcode.com/problems/minimum-path-sum/discuss/1202628/C%2B%2B-Three-Solutions-Recursion-Top-Down-Bottom-Up-Easy-To-Understand
class Solution {
    public int minPathSum(int[][] grid) {
        int r=grid.length;
        int c=grid[0].length;
        
        //one size more dp
        int[][] dp = new int[r][c];
        
        
        dp[0][0] = grid[0][0];
        
        //fill first row
        for (int i = 1; i < c; i++) {
            dp[0][i] = grid[0][i] + dp[0][i - 1];
        }
        
        //fill first column
        for (int i = 1; i < r; i++) {
            dp[i][0] = grid[i][0] + dp[i - 1][0];
        }
        
        //fill rest dp from 1,1
        for(int i=1; i < r; i++){
            for(int j=1; j< c; j++){
                //you can reach from left or top
                dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);
            }
        }
        
        return dp[r-1][c-1];
        
    }
}